services:
  db:
    image: postgres:15
    container_name: cinemaapp-db
    environment:
      POSTGRES_DB: cinema_db
      POSTGRES_USER: cinema_user
      POSTGRES_PASSWORD: cinema_pass
    ports:
      - "55432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cinema_user -d cinema_db"]
      interval: 5s
      timeout: 5s
      retries: 20

  # ServiÃ§o que aplica o schema sempre que o stack sobe (idempotente)
  db-init:
    image: postgres:15
    container_name: cinemaapp-db-init
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGPASSWORD: cinema_pass
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: >
      bash -lc "
      until pg_isready -h db -p 5432 -U cinema_user -d cinema_db; do sleep 1; done;
      psql -h db -U cinema_user -d cinema_db -f /docker-entrypoint-initdb.d/init.sql
      "
    restart: "no"

  backend:
    image: cinemaapp/backend:dev
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cinemaapp-backend
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    ports:
      - "5000:5000"
    # volumes:
    #   - ./backend/app:/app/app

  frontend:
    image: cinemaapp/frontend:dev
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cinemaapp-frontend
    ports:
      - "8080:80"
    depends_on:
      - backend

volumes:
  db_data:
